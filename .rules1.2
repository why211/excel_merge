# Excel数据处理工具增强功能开发需求

## 任务描述
开发一个Excel数据处理工具的增强功能，实现跨文件的学生姓名补充功能。

## 核心需求

### 1. 问题场景
- 某些Excel文件中包含"学号"字段，但缺少"学生姓名"字段
- 需要从其他Excel文件中根据学号匹配获取学生姓名
- 如果无法匹配到学生姓名，则使用指定的默认值

### 2. 功能要求

#### 2.1 文件分析阶段
- 分析所有选中的Excel文件
- 识别哪些文件包含"学号"字段但缺少"学生姓名"字段
- 识别哪些文件同时包含"学号"和"学生姓名"字段
- 建立学号与学生姓名的映射关系

#### 2.2 数据补充逻辑
- 对于缺少学生姓名的文件：
  - 通过学号在其他文件中查找对应的学生姓名
  - 如果找到匹配的学生姓名，则补充到当前记录中
  - 如果未找到匹配的学生姓名，则使用指定的默认值（如"未知学生"）

#### 2.3 用户交互
- 在字段选择阶段，自动识别需要补充学生姓名的文件
- 提示用户是否启用学生姓名补充功能
- 允许用户指定默认的学生姓名值
- 显示补充统计信息（成功补充数量、使用默认值数量等）

## 技术实现要求

### 1. 数据结构设计
- 建立学号到学生姓名的映射字典
- 记录每个文件的字段缺失情况
- 统计补充结果

### 2. 核心算法
```python
def build_student_name_mapping(files_with_both_fields):
    """构建学号到学生姓名的映射"""
    # 从包含学号和姓名的文件中构建映射关系
    pass

def supplement_student_names(files_missing_names, name_mapping, default_name):
    """为缺少学生姓名的文件补充学生姓名"""
    # 根据学号查找学生姓名，找不到则使用默认值
    pass
```

### 3. 处理流程
1. **文件分析阶段**：识别文件类型（有姓名/无姓名）
2. **映射构建阶段**：从有姓名的文件构建学号-姓名映射
3. **数据补充阶段**：为无姓名的文件补充学生姓名
4. **结果统计阶段**：显示补充结果统计

### 4. 输出要求
- 在最终结果中，所有记录都应包含学生姓名字段
- 提供补充统计信息（成功匹配数量、使用默认值数量）
- 在Excel输出中添加补充状态说明

## 用户界面要求

### 1. 功能选择
```
 检测到部分文件缺少学生姓名字段，是否启用学生姓名补充功能？
请选择 (y/n，默认y): 
```

### 2. 默认值设置
```
 请输入未找到匹配学生姓名时使用的默认值（默认：未知学生）: 
```
<code_block_to_apply_changes_from>
```
 正在补充学生姓名...
📊 文件1: 成功补充 50 个，使用默认值 2 个
📊 文件2: 成功补充 30 个，使用默认值 1 个
✅ 学生姓名补充完成
```

### 4. 结果统计
```
 学生姓名补充统计:
  • 成功匹配: 80 个记录
  • 使用默认值: 3 个记录
  • 补充成功率: 96.4%
```

## 技术要求

### 1. 兼容性
- 保持与现有Excel处理工具的完全兼容
- 不影响现有的字段选择、去重等功能
- 作为可选功能，用户可以选择启用或禁用

### 2. 性能要求
- 对于大量文件的处理，需要优化映射构建算法
- 考虑内存使用，避免一次性加载所有数据到内存

### 3. 错误处理
- 处理学号格式不一致的情况
- 处理重复学号的情况（优先使用第一个匹配的姓名）
- 处理文件读取错误的情况

### 4. 代码质量
- 添加详细的注释和文档字符串
- 使用类型提示
- 遵循现有的代码风格和命名规范

## 测试要求

### 1. 测试场景
- 测试文件包含学号但缺少姓名的情况
- 测试所有文件都缺少姓名的情况
- 测试学号格式不一致的情况
- 测试重复学号的情况

### 2. 边界情况
- 空文件处理
- 学号字段为空的情况
- 学生姓名字段为空的情况

## 交付要求

### 1. 代码实现
- 在现有ExcelProcessor类中添加新的方法
- 保持现有接口不变
- 提供清晰的配置选项

### 2. 文档
- 更新README文档，说明新功能的使用方法
- 提供使用示例和最佳实践

### 3. 测试
- 提供测试用例和测试数据
- 确保功能在各种情况下都能正常工作

## 注意事项

1. **数据一致性**：确保补充的学生姓名数据准确可靠
2. **用户体验**：提供清晰的操作提示和结果反馈
3. **性能优化**：对于大量数据的处理要考虑性能问题
4. **错误恢复**：在补充过程中出现错误时，能够继续处理其他记录
5. **数据完整性**：确保最终输出的数据完整且格式正确

请基于以上需求开发相应的功能模块，确保与现有代码的无缝集成。
```

这个提示词详细描述了您的需求，包括：
- ✅ 问题场景分析
- ✅ 功能要求和技术实现
- ✅ 用户界面设计
- ✅ 代码质量要求
- ✅ 测试和交付要求

您可以将这个提示词交给agent来处理您的需求。


### 4. 结果统计
�� 学生姓名补充统计:
成功匹配: 80 个记录
使用默认值: 3 个记录
补充成功率: 96.4%


## 技术要求

### 1. 兼容性
- 保持与现有Excel处理工具的完全兼容
- 不影响现有的字段选择、去重等功能
- 作为可选功能，用户可以选择启用或禁用

### 2. 性能要求
- 对于大量文件的处理，需要优化映射构建算法
- 考虑内存使用，避免一次性加载所有数据到内存

### 3. 错误处理
- 处理学号格式不一致的情况
- 处理重复学号的情况（优先使用第一个匹配的姓名）
- 处理文件读取错误的情况

### 4. 代码质量
- 添加详细的注释和文档字符串
- 使用类型提示
- 遵循现有的代码风格和命名规范

## 测试要求

### 1. 测试场景
- 测试文件包含学号但缺少姓名的情况
- 测试所有文件都缺少姓名的情况
- 测试学号格式不一致的情况
- 测试重复学号的情况

### 2. 边界情况
- 空文件处理
- 学号字段为空的情况
- 学生姓名字段为空的情况

## 交付要求

### 1. 代码实现
- 在现有ExcelProcessor类中添加新的方法
- 保持现有接口不变
- 提供清晰的配置选项

### 2. 文档
- 更新README文档，说明新功能的使用方法
- 提供使用示例和最佳实践

### 3. 测试
- 提供测试用例和测试数据
- 确保功能在各种情况下都能正常工作

## 注意事项

1. **数据一致性**：确保补充的学生姓名数据准确可靠
2. **用户体验**：提供清晰的操作提示和结果反馈
3. **性能优化**：对于大量数据的处理要考虑性能问题
4. **错误恢复**：在补充过程中出现错误时，能够继续处理其他记录
5. **数据完整性**：确保最终输出的数据完整且格式正确

请基于以上需求开发相应的功能模块，确保与现有代码的无缝集成。